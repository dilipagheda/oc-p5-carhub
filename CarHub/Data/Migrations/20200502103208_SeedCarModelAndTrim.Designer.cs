// <auto-generated />
using System;
using CarHub.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarHub.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200502103208_SeedCarModelAndTrim")]
    partial class SeedCarModelAndTrim
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarHub.Data.Models.BodyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BodyTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BodyTypes");
                });

            modelBuilder.Entity("CarHub.Data.Models.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("BodyTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CarMakeId")
                        .HasColumnType("int");

                    b.Property<int?>("CarModelId")
                        .HasColumnType("int");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DriveTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("FuelTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Kms")
                        .HasColumnType("int");

                    b.Property<int>("NoOfCylinders")
                        .HasColumnType("int");

                    b.Property<int>("NoOfDoors")
                        .HasColumnType("int");

                    b.Property<int>("NoOfSeats")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegoExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegoNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransmissionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int?>("TrimId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BodyTypeId");

                    b.HasIndex("CarMakeId");

                    b.HasIndex("CarModelId");

                    b.HasIndex("ColorId");

                    b.HasIndex("DriveTypeId");

                    b.HasIndex("FuelTypeId");

                    b.HasIndex("TrimId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarHub.Data.Models.CarMake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MakeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CarMakes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MakeName = "Toyota"
                        },
                        new
                        {
                            Id = 2,
                            MakeName = "Honda"
                        },
                        new
                        {
                            Id = 3,
                            MakeName = "Mazda"
                        },
                        new
                        {
                            Id = 4,
                            MakeName = "Audi"
                        },
                        new
                        {
                            Id = 5,
                            MakeName = "Nissan"
                        },
                        new
                        {
                            Id = 6,
                            MakeName = "Holden"
                        },
                        new
                        {
                            Id = 7,
                            MakeName = "BMW"
                        },
                        new
                        {
                            Id = 8,
                            MakeName = "Mitsubishi"
                        },
                        new
                        {
                            Id = 9,
                            MakeName = "Hyundai"
                        },
                        new
                        {
                            Id = 10,
                            MakeName = "Mercedes-Benz"
                        });
                });

            modelBuilder.Entity("CarHub.Data.Models.CarModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarMakeId")
                        .HasColumnType("int");

                    b.Property<string>("ModelName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarMakeId");

                    b.ToTable("CarModels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarMakeId = 1,
                            ModelName = "Camry"
                        },
                        new
                        {
                            Id = 2,
                            CarMakeId = 1,
                            ModelName = "Corolla"
                        },
                        new
                        {
                            Id = 3,
                            CarMakeId = 1,
                            ModelName = "Hiace"
                        },
                        new
                        {
                            Id = 4,
                            CarMakeId = 1,
                            ModelName = "Hilux"
                        },
                        new
                        {
                            Id = 5,
                            CarMakeId = 1,
                            ModelName = "Kluger"
                        },
                        new
                        {
                            Id = 6,
                            CarMakeId = 1,
                            ModelName = "Landcruiser"
                        },
                        new
                        {
                            Id = 7,
                            CarMakeId = 2,
                            ModelName = "Accord"
                        },
                        new
                        {
                            Id = 8,
                            CarMakeId = 2,
                            ModelName = "Accord Euro"
                        },
                        new
                        {
                            Id = 9,
                            CarMakeId = 2,
                            ModelName = "City"
                        },
                        new
                        {
                            Id = 10,
                            CarMakeId = 2,
                            ModelName = "Civic"
                        },
                        new
                        {
                            Id = 11,
                            CarMakeId = 2,
                            ModelName = "CR-V"
                        },
                        new
                        {
                            Id = 12,
                            CarMakeId = 2,
                            ModelName = "HR-V"
                        },
                        new
                        {
                            Id = 13,
                            CarMakeId = 2,
                            ModelName = "Jazz"
                        },
                        new
                        {
                            Id = 14,
                            CarMakeId = 2,
                            ModelName = "Odyssey"
                        },
                        new
                        {
                            Id = 15,
                            CarMakeId = 2,
                            ModelName = "Integra"
                        },
                        new
                        {
                            Id = 16,
                            CarMakeId = 3,
                            ModelName = "2"
                        },
                        new
                        {
                            Id = 17,
                            CarMakeId = 3,
                            ModelName = "3"
                        },
                        new
                        {
                            Id = 18,
                            CarMakeId = 3,
                            ModelName = "6"
                        },
                        new
                        {
                            Id = 19,
                            CarMakeId = 3,
                            ModelName = "BT-50"
                        },
                        new
                        {
                            Id = 20,
                            CarMakeId = 3,
                            ModelName = "CX-3"
                        },
                        new
                        {
                            Id = 21,
                            CarMakeId = 3,
                            ModelName = "CX-5"
                        },
                        new
                        {
                            Id = 22,
                            CarMakeId = 3,
                            ModelName = "CX-7"
                        },
                        new
                        {
                            Id = 23,
                            CarMakeId = 3,
                            ModelName = "CX-9"
                        },
                        new
                        {
                            Id = 24,
                            CarMakeId = 3,
                            ModelName = "MX-5"
                        },
                        new
                        {
                            Id = 25,
                            CarMakeId = 4,
                            ModelName = "A1"
                        },
                        new
                        {
                            Id = 26,
                            CarMakeId = 4,
                            ModelName = "A3"
                        },
                        new
                        {
                            Id = 27,
                            CarMakeId = 4,
                            ModelName = "A4"
                        },
                        new
                        {
                            Id = 28,
                            CarMakeId = 4,
                            ModelName = "A5"
                        },
                        new
                        {
                            Id = 29,
                            CarMakeId = 4,
                            ModelName = "A6"
                        },
                        new
                        {
                            Id = 30,
                            CarMakeId = 5,
                            ModelName = "370Z"
                        },
                        new
                        {
                            Id = 31,
                            CarMakeId = 5,
                            ModelName = "Dualis"
                        },
                        new
                        {
                            Id = 32,
                            CarMakeId = 5,
                            ModelName = "Elgrand"
                        },
                        new
                        {
                            Id = 33,
                            CarMakeId = 5,
                            ModelName = "JUKE"
                        },
                        new
                        {
                            Id = 34,
                            CarMakeId = 5,
                            ModelName = "Navara"
                        },
                        new
                        {
                            Id = 35,
                            CarMakeId = 5,
                            ModelName = "Pathfinder"
                        },
                        new
                        {
                            Id = 36,
                            CarMakeId = 5,
                            ModelName = "Patrol"
                        },
                        new
                        {
                            Id = 37,
                            CarMakeId = 5,
                            ModelName = "Pulsar"
                        },
                        new
                        {
                            Id = 38,
                            CarMakeId = 6,
                            ModelName = "Acadia"
                        },
                        new
                        {
                            Id = 39,
                            CarMakeId = 6,
                            ModelName = "Astra"
                        },
                        new
                        {
                            Id = 40,
                            CarMakeId = 6,
                            ModelName = "Calais"
                        },
                        new
                        {
                            Id = 41,
                            CarMakeId = 6,
                            ModelName = "Captiva"
                        },
                        new
                        {
                            Id = 42,
                            CarMakeId = 6,
                            ModelName = "Colorado"
                        },
                        new
                        {
                            Id = 43,
                            CarMakeId = 6,
                            ModelName = "Commodore"
                        },
                        new
                        {
                            Id = 44,
                            CarMakeId = 6,
                            ModelName = "Cruze"
                        },
                        new
                        {
                            Id = 45,
                            CarMakeId = 7,
                            ModelName = "1 Series"
                        },
                        new
                        {
                            Id = 46,
                            CarMakeId = 7,
                            ModelName = "2 Series"
                        },
                        new
                        {
                            Id = 47,
                            CarMakeId = 7,
                            ModelName = "3 Series"
                        },
                        new
                        {
                            Id = 48,
                            CarMakeId = 7,
                            ModelName = "4 Series"
                        },
                        new
                        {
                            Id = 49,
                            CarMakeId = 8,
                            ModelName = "ASX"
                        },
                        new
                        {
                            Id = 50,
                            CarMakeId = 8,
                            ModelName = "Challenger"
                        },
                        new
                        {
                            Id = 51,
                            CarMakeId = 8,
                            ModelName = "Lancer"
                        },
                        new
                        {
                            Id = 52,
                            CarMakeId = 9,
                            ModelName = "Accent"
                        },
                        new
                        {
                            Id = 53,
                            CarMakeId = 9,
                            ModelName = "Elantra"
                        },
                        new
                        {
                            Id = 54,
                            CarMakeId = 9,
                            ModelName = "i30"
                        },
                        new
                        {
                            Id = 55,
                            CarMakeId = 10,
                            ModelName = "A-Class"
                        },
                        new
                        {
                            Id = 56,
                            CarMakeId = 10,
                            ModelName = "C-Class"
                        },
                        new
                        {
                            Id = 57,
                            CarMakeId = 10,
                            ModelName = "CLA-Class"
                        },
                        new
                        {
                            Id = 58,
                            CarMakeId = 10,
                            ModelName = "E-Class"
                        },
                        new
                        {
                            Id = 59,
                            CarMakeId = 10,
                            ModelName = "GLA-Class"
                        });
                });

            modelBuilder.Entity("CarHub.Data.Models.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("CarHub.Data.Models.DriveType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DriveTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DriveTypes");
                });

            modelBuilder.Entity("CarHub.Data.Models.FuelType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FuelTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FuelTypes");
                });

            modelBuilder.Entity("CarHub.Data.Models.Inventory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AvailableOnDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InventoryStatusId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PurchaseTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("InventoryStatusId");

                    b.HasIndex("PurchaseTypeId");

                    b.ToTable("InventoryList");
                });

            modelBuilder.Entity("CarHub.Data.Models.InventoryMedia", b =>
                {
                    b.Property<Guid>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCoverMedia")
                        .HasColumnType("bit");

                    b.HasKey("CarId", "MediaId");

                    b.HasIndex("MediaId");

                    b.ToTable("InventoryMediaList");
                });

            modelBuilder.Entity("CarHub.Data.Models.InventoryStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InventoryStatusList");
                });

            modelBuilder.Entity("CarHub.Data.Models.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MediaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MediaType")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.ToTable("MediaList");
                });

            modelBuilder.Entity("CarHub.Data.Models.PurchaseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PurchaseTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PurchaseTypes");
                });

            modelBuilder.Entity("CarHub.Data.Models.Repair", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("Repairs");
                });

            modelBuilder.Entity("CarHub.Data.Models.Trim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarModelId")
                        .HasColumnType("int");

                    b.Property<string>("TrimName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarModelId");

                    b.ToTable("Trims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarModelId = 1,
                            TrimName = "Altise"
                        },
                        new
                        {
                            Id = 2,
                            CarModelId = 1,
                            TrimName = "Ascent"
                        },
                        new
                        {
                            Id = 3,
                            CarModelId = 1,
                            TrimName = "Ascent Sport"
                        },
                        new
                        {
                            Id = 4,
                            CarModelId = 1,
                            TrimName = "Atara S"
                        },
                        new
                        {
                            Id = 5,
                            CarModelId = 1,
                            TrimName = "Atara SL"
                        },
                        new
                        {
                            Id = 6,
                            CarModelId = 1,
                            TrimName = "CSi"
                        },
                        new
                        {
                            Id = 7,
                            CarModelId = 1,
                            TrimName = "RZ"
                        },
                        new
                        {
                            Id = 8,
                            CarModelId = 1,
                            TrimName = "SL"
                        },
                        new
                        {
                            Id = 9,
                            CarModelId = 1,
                            TrimName = "Sportivo"
                        },
                        new
                        {
                            Id = 10,
                            CarModelId = 2,
                            TrimName = "Ascent"
                        },
                        new
                        {
                            Id = 11,
                            CarModelId = 2,
                            TrimName = "Ascent Sport"
                        },
                        new
                        {
                            Id = 12,
                            CarModelId = 2,
                            TrimName = "Ascent Sport Hybrid"
                        },
                        new
                        {
                            Id = 13,
                            CarModelId = 2,
                            TrimName = "Conquest"
                        },
                        new
                        {
                            Id = 14,
                            CarModelId = 2,
                            TrimName = "Hybrid"
                        },
                        new
                        {
                            Id = 15,
                            CarModelId = 2,
                            TrimName = "Levin SX"
                        },
                        new
                        {
                            Id = 16,
                            CarModelId = 2,
                            TrimName = "Levin ZR"
                        },
                        new
                        {
                            Id = 17,
                            CarModelId = 3,
                            TrimName = "Commuter"
                        },
                        new
                        {
                            Id = 18,
                            CarModelId = 3,
                            TrimName = "Commuter GL"
                        },
                        new
                        {
                            Id = 19,
                            CarModelId = 3,
                            TrimName = "Grand Cabin GL"
                        },
                        new
                        {
                            Id = 20,
                            CarModelId = 3,
                            TrimName = "Super Custom"
                        },
                        new
                        {
                            Id = 21,
                            CarModelId = 4,
                            TrimName = "DX"
                        },
                        new
                        {
                            Id = 22,
                            CarModelId = 4,
                            TrimName = "Rogue"
                        },
                        new
                        {
                            Id = 23,
                            CarModelId = 4,
                            TrimName = "Rugged X"
                        },
                        new
                        {
                            Id = 24,
                            CarModelId = 4,
                            TrimName = "SR"
                        },
                        new
                        {
                            Id = 25,
                            CarModelId = 4,
                            TrimName = "SR5"
                        },
                        new
                        {
                            Id = 26,
                            CarModelId = 4,
                            TrimName = "SR5 Hi-Rider"
                        },
                        new
                        {
                            Id = 27,
                            CarModelId = 5,
                            TrimName = "Altitude"
                        },
                        new
                        {
                            Id = 28,
                            CarModelId = 5,
                            TrimName = "Black Edition"
                        },
                        new
                        {
                            Id = 29,
                            CarModelId = 5,
                            TrimName = "CV"
                        },
                        new
                        {
                            Id = 30,
                            CarModelId = 5,
                            TrimName = "CV Sport"
                        },
                        new
                        {
                            Id = 31,
                            CarModelId = 5,
                            TrimName = "CVX"
                        },
                        new
                        {
                            Id = 32,
                            CarModelId = 5,
                            TrimName = "Grande"
                        },
                        new
                        {
                            Id = 33,
                            CarModelId = 6,
                            TrimName = "Altitude"
                        },
                        new
                        {
                            Id = 34,
                            CarModelId = 6,
                            TrimName = "GX"
                        },
                        new
                        {
                            Id = 35,
                            CarModelId = 6,
                            TrimName = "GXL"
                        },
                        new
                        {
                            Id = 36,
                            CarModelId = 6,
                            TrimName = "GXL Troopcarrier"
                        },
                        new
                        {
                            Id = 37,
                            CarModelId = 6,
                            TrimName = "Sahara"
                        },
                        new
                        {
                            Id = 38,
                            CarModelId = 6,
                            TrimName = "Standard"
                        },
                        new
                        {
                            Id = 39,
                            CarModelId = 6,
                            TrimName = "VX"
                        },
                        new
                        {
                            Id = 40,
                            CarModelId = 6,
                            TrimName = "Workmate"
                        },
                        new
                        {
                            Id = 41,
                            CarModelId = 7,
                            TrimName = "EXi"
                        },
                        new
                        {
                            Id = 42,
                            CarModelId = 7,
                            TrimName = "Limited Edition"
                        },
                        new
                        {
                            Id = 43,
                            CarModelId = 7,
                            TrimName = "V6"
                        },
                        new
                        {
                            Id = 44,
                            CarModelId = 7,
                            TrimName = "V6L"
                        },
                        new
                        {
                            Id = 45,
                            CarModelId = 8,
                            TrimName = "Limited Edition"
                        },
                        new
                        {
                            Id = 46,
                            CarModelId = 8,
                            TrimName = "Luxury"
                        },
                        new
                        {
                            Id = 47,
                            CarModelId = 8,
                            TrimName = "Luxury Navi"
                        },
                        new
                        {
                            Id = 48,
                            CarModelId = 8,
                            TrimName = "Sport"
                        },
                        new
                        {
                            Id = 49,
                            CarModelId = 9,
                            TrimName = "VTi"
                        },
                        new
                        {
                            Id = 50,
                            CarModelId = 9,
                            TrimName = "VTi-L"
                        },
                        new
                        {
                            Id = 51,
                            CarModelId = 10,
                            TrimName = "GLi"
                        },
                        new
                        {
                            Id = 52,
                            CarModelId = 10,
                            TrimName = "RS"
                        },
                        new
                        {
                            Id = 53,
                            CarModelId = 10,
                            TrimName = "Si"
                        },
                        new
                        {
                            Id = 54,
                            CarModelId = 10,
                            TrimName = "Sport"
                        },
                        new
                        {
                            Id = 55,
                            CarModelId = 11,
                            TrimName = "Limited Edition"
                        },
                        new
                        {
                            Id = 56,
                            CarModelId = 11,
                            TrimName = "Luxury"
                        },
                        new
                        {
                            Id = 57,
                            CarModelId = 11,
                            TrimName = "Sport"
                        },
                        new
                        {
                            Id = 58,
                            CarModelId = 12,
                            TrimName = "50 Years Edition"
                        },
                        new
                        {
                            Id = 59,
                            CarModelId = 12,
                            TrimName = "Limited Edition"
                        },
                        new
                        {
                            Id = 60,
                            CarModelId = 12,
                            TrimName = "RS"
                        },
                        new
                        {
                            Id = 61,
                            CarModelId = 12,
                            TrimName = "Sport"
                        },
                        new
                        {
                            Id = 62,
                            CarModelId = 13,
                            TrimName = "GLi"
                        },
                        new
                        {
                            Id = 63,
                            CarModelId = 13,
                            TrimName = "GLi Limited Edition"
                        },
                        new
                        {
                            Id = 64,
                            CarModelId = 13,
                            TrimName = "GLi Vibe"
                        },
                        new
                        {
                            Id = 65,
                            CarModelId = 13,
                            TrimName = "Vibe"
                        },
                        new
                        {
                            Id = 66,
                            CarModelId = 14,
                            TrimName = "Luxury"
                        },
                        new
                        {
                            Id = 67,
                            CarModelId = 14,
                            TrimName = "V6-L"
                        },
                        new
                        {
                            Id = 68,
                            CarModelId = 14,
                            TrimName = "VTi"
                        },
                        new
                        {
                            Id = 69,
                            CarModelId = 15,
                            TrimName = "GSi"
                        },
                        new
                        {
                            Id = 70,
                            CarModelId = 15,
                            TrimName = "Luxury"
                        },
                        new
                        {
                            Id = 71,
                            CarModelId = 15,
                            TrimName = "Type R"
                        },
                        new
                        {
                            Id = 72,
                            CarModelId = 15,
                            TrimName = "Type S"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("CarHub.Data.Models.Car", b =>
                {
                    b.HasOne("CarHub.Data.Models.BodyType", "BodyType")
                        .WithMany()
                        .HasForeignKey("BodyTypeId");

                    b.HasOne("CarHub.Data.Models.CarMake", "CarMake")
                        .WithMany()
                        .HasForeignKey("CarMakeId");

                    b.HasOne("CarHub.Data.Models.CarModel", "CarModel")
                        .WithMany()
                        .HasForeignKey("CarModelId");

                    b.HasOne("CarHub.Data.Models.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.HasOne("CarHub.Data.Models.DriveType", "DriveType")
                        .WithMany()
                        .HasForeignKey("DriveTypeId");

                    b.HasOne("CarHub.Data.Models.FuelType", "FuelType")
                        .WithMany()
                        .HasForeignKey("FuelTypeId");

                    b.HasOne("CarHub.Data.Models.Trim", "Trim")
                        .WithMany()
                        .HasForeignKey("TrimId");
                });

            modelBuilder.Entity("CarHub.Data.Models.CarModel", b =>
                {
                    b.HasOne("CarHub.Data.Models.CarMake", "CarMake")
                        .WithMany("CarModels")
                        .HasForeignKey("CarMakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarHub.Data.Models.Inventory", b =>
                {
                    b.HasOne("CarHub.Data.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarHub.Data.Models.InventoryStatus", "InventoryStatus")
                        .WithMany()
                        .HasForeignKey("InventoryStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarHub.Data.Models.PurchaseType", "PurchaseType")
                        .WithMany()
                        .HasForeignKey("PurchaseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarHub.Data.Models.InventoryMedia", b =>
                {
                    b.HasOne("CarHub.Data.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarHub.Data.Models.Media", "Media")
                        .WithMany()
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarHub.Data.Models.Repair", b =>
                {
                    b.HasOne("CarHub.Data.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarHub.Data.Models.Trim", b =>
                {
                    b.HasOne("CarHub.Data.Models.CarModel", "CarModel")
                        .WithMany("Trims")
                        .HasForeignKey("CarModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
